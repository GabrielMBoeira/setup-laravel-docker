version: "3.7"

services:
    app:
        image: "laratest/app:${TAG:-latest}"
        build:
            args:
                user: gabriel
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        container_name: app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - laravel-network

    nginx:
        image: "scout3030/nginx:${TAG:-latest}"
        build:
            context: ./
            dockerfile: docker-compose/nginx.dockerfile
        container_name: nginx
        restart: unless-stopped
        ports:
            - ${SERVER_PORT:-80}:80
            - ${SERVER_PORT_SSL:-443}:443
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx:/etc/nginx/conf.d/
        networks:
            - laravel-network

    db:
        image: mysql:5.7
        container_name: db
        restart: unless-stopped
        ports:
            - ${SERVER_PORT_DB:-3306}:3306
        volumes:
            - dbdata:/var/lib/mysql
        environment:
            - MYSQL_DATABASE=${DB_DATABASE:-homestead}
            - MYSQL_USER=${DB_USERNAME:-homestead}
            - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}
        networks:
            - laravel-network

    phpmyadmin:
        image: phpmyadmin
        restart: always
        container_name: phpmyadmin
        ports:
            - ${PHPMYADMIN_PORT_DB:-8080}:80
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${DB_HOST:-db}
            - PMA_USER=${DB_USERNAME:-homestead}
            - PMA_PASSWORD=${DB_PASSWORD:-secret}
        networks:
            - laravel-network

    redis:
        image: redis:latest
        container_name: redis
        networks:
            - laravel-network

networks:
    laravel-network:
        driver: bridge

volumes:
    dbdata:
